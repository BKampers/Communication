/*
 * Copyright Â© Bart Kampers
 */
package bka.communication.graph;

import bka.communication.*;
import java.text.*;
import java.util.logging.*;
import javax.swing.*;
import javax.swing.text.*;
import jssc.*;


/**
 *
 * @author bartk
 */
public class ChannelView extends bka.graph.swing.AbstractEditPanel {

    
    public ChannelView(ChannelVertex channelVertex) {
        this.channelVertex = channelVertex;
        initComponents();
        Channel channel = channelVertex.getChannel();
        if (channel instanceof SocketChannel) {
            urlRadioButton.setSelected(true);
            enableControls();
            hostTextField.setText(((SocketChannel) channel).getHost());
            portTextField.setText(Integer.toString(((SocketChannel) channel).getPort()));
        }
        else if (channel instanceof JsscChannel) {
            serialRadioButton.setSelected(true);
            enableControls();
            serialComboBox.setSelectedItem(((JsscChannel) channel).getName());
        }
        enableButtons();
    }


   @Override
   public void confirm() {
       if (serialRadioButton.isSelected()) {
           String portName = (String) serialComboBox.getSelectedItem();
           int baudrate = Integer.parseInt(baudTextField.getText());
           channelVertex.setChannel(JsscChannel.create(portName, baudrate));
       }
       if (urlRadioButton.isSelected()) {
           String host = hostTextField.getText();
           int port = Integer.parseInt(portTextField.getText());
           channelVertex.setChannel(SocketChannel.create(host, port));
       }
   }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        radioButtonGroup = new javax.swing.ButtonGroup();
        nameTextField = new javax.swing.JTextField();
        serialRadioButton = new javax.swing.JRadioButton();
        urlRadioButton = new javax.swing.JRadioButton();
        serialComboBox = new javax.swing.JComboBox<>();
        hostTextField = new javax.swing.JTextField();
        baudTextField = new JFormattedTextField(createNumberFormatter());
        portTextField = new JFormattedTextField(createNumberFormatter(0xFFFF));
        openButton = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();

        radioButtonGroup.add(serialRadioButton);
        serialRadioButton.setText("Serial port");
        serialRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serialRadioButton_actionPerformed(evt);
            }
        });

        radioButtonGroup.add(urlRadioButton);
        urlRadioButton.setText("URL");
        urlRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                urlRadioButton_actionPerformed(evt);
            }
        });

        serialComboBox.setModel(serialComboBoxModel);
        serialComboBox.setEnabled(false);

        hostTextField.setEnabled(false);

        baudTextField.setText("115200");

        openButton.setText("Open");
        openButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openButton_actionPerformed(evt);
            }
        });

        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButton_actionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(openButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(closeButton)
                                .addGap(0, 197, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(serialComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(hostTextField))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(portTextField)
                                    .addComponent(baudTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(urlRadioButton)
                            .addComponent(serialRadioButton))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(nameTextField, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(serialRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(serialComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(baudTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(urlRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hostTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(portTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(openButton)
                    .addComponent(closeButton))
                .addContainerGap(25, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    private NumberFormatter createNumberFormatter() {
        return createNumberFormatter(Integer.MAX_VALUE);
    }

    
    private NumberFormatter createNumberFormatter(int maximum) {
        NumberFormat format = NumberFormat.getInstance();
        format.setGroupingUsed(false);
        NumberFormatter formatter = new NumberFormatter(format);
        formatter.setValueClass(Integer.class);
        formatter.setMinimum(0);
        formatter.setMaximum(maximum);
        formatter.setAllowsInvalid(false);
        formatter.setCommitsOnValidEdit(true); // validate on each keystroke
        return formatter;
    }


    private void serialRadioButton_actionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serialRadioButton_actionPerformed
        enableControls();
    }//GEN-LAST:event_serialRadioButton_actionPerformed


    private void urlRadioButton_actionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_urlRadioButton_actionPerformed
        enableControls();
    }//GEN-LAST:event_urlRadioButton_actionPerformed


    private void openButton_actionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openButton_actionPerformed
        String name = nameTextField.getText().trim();
        if (name.isEmpty()) {
            name = channelVertex.getName();
        }
        try {
            channelVertex.getChannel().open(name);

        }
        catch (ChannelException ex) {
            Logger.getLogger(ChannelView.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally {
            enableButtons();
        }
    }//GEN-LAST:event_openButton_actionPerformed


    private void closeButton_actionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButton_actionPerformed
        try {
            channelVertex.getChannel().close();
        }
        catch (ChannelException ex) {
            Logger.getLogger(ChannelView.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally {
            enableButtons();
        }
    }//GEN-LAST:event_closeButton_actionPerformed


    private void enableButtons() {
        Channel channel = channelVertex.getChannel();
        if (channel != null) {
            openButton.setEnabled(! channel.isOpened());
            closeButton.setEnabled(channel.isOpened());
        }
        else {
            openButton.setEnabled(false);
            closeButton.setEnabled(false);
        }
    }


    private void enableControls() {
        serialComboBox.setEnabled(serialRadioButton.isSelected());
        baudTextField.setEnabled(serialRadioButton.isSelected());
        hostTextField.setEnabled(urlRadioButton.isSelected());
        portTextField.setEditable(urlRadioButton.isSelected());
        if (serialComboBox.isEnabled()) {
            populateSerialComboBox();
        }
    }


    private void populateSerialComboBox() {
        serialComboBoxModel.removeAllElements();
        for (String name : SerialPortList.getPortNames()) {
            serialComboBoxModel.addElement(name);
        }
    }


    private final ChannelVertex channelVertex;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFormattedTextField baudTextField;
    private javax.swing.JButton closeButton;
    private javax.swing.JTextField hostTextField;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JButton openButton;
    private javax.swing.JFormattedTextField portTextField;
    private javax.swing.ButtonGroup radioButtonGroup;
    private javax.swing.JComboBox<String> serialComboBox;
    private javax.swing.JRadioButton serialRadioButton;
    private javax.swing.JRadioButton urlRadioButton;
    // End of variables declaration//GEN-END:variables

    private final DefaultComboBoxModel<String> serialComboBoxModel = new DefaultComboBoxModel<>();

}
